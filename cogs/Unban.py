import discord
from discord import ui, app_commands
from discord.ext import commands
from discord.ext.commands import Context
import json
import os

class VoteManager:
    def __init__(self, bot, filename="unban_votes.json"):
        self.filename = filename
        self.bot = bot

    def save_vote(self, vote):
        if os.path.exists(self.filename):
            with open(self.filename, "r", encoding="utf-8") as f:
                data = json.load(f)
        else:
            data = []
        vote_dict = {
            "user_id": vote.user_id,
            "ban_date": vote.ban_date,
            "ban_reason": vote.ban_reason,
            "unban_reason": vote.unban_reason,
            "votes": {option: list(vote.votes[option]) for option in vote.options},
            "active": vote.active,
            "thread_id": vote.thread_id,
            "message_id": vote.message_id,
            "close_time": vote.close_time,
        }
        found = False
        for i in range(len(data)):
            if data[i]["thread_id"] == vote.thread_id:
                data[i] = vote_dict
                found = True
                break
        if not found:
            data.append(vote_dict)
        with open(self.filename, "w", encoding="utf-8") as f:
            json.dump(data, f, ensure_ascii=False)

    def load_vote(self, thread_id):
        if os.path.exists(self.filename):
            with open(self.filename, "r", encoding="utf-8") as f:
                data = json.load(f)
        else:
            return None
        for vote_dict in data:
            if vote_dict["thread_id"] == thread_id:
                vote = VoteView(self.bot)
                vote.ban_date = vote_dict["ban_date"]
                vote.ban_reason = vote_dict["ban_reason"]
                vote.unban_reason = vote_dict["unban_reason"]

                vote.votes = {option: set(vote_dict["votes"][option]) for option in vote.options}
                vote.active = vote_dict["active"]
                vote.thread_id = vote_dict["thread_id"]
                vote.message_id = vote_dict["thread_id"]
                vote.user_id = vote_dict["user_id"]
                vote.close_time = vote_dict["close_time"]
                return vote
        return None
    def update_view(self, view):

        for option in view.options:
            button = VoteButton(option)
            view.add_item(button)

        settings_button = VoteButton('üîß')
        settings_button.custom_id = 'vote_üîß'
        settings_button.style = discord.ButtonStyle.blurple
        view.add_item(settings_button)

        end_button = VoteButton('–ó–∞–∫–æ–Ω—á–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ')
        end_button.custom_id = 'vote_end'
        end_button.style = discord.ButtonStyle.blurple
        view.add_item(end_button)
        return view


class UnbanModal(ui.Modal, title='–ü–æ–¥–∞—Ç—å—Å—è –Ω–∞ —Ä–∞–∑–±–∞–Ω'):
    ban_date = ui.TextInput(label='–î–∞—Ç–∞ –±–∞–Ω–∞', placeholder='–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –±–∞–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì')
    ban_reason = ui.TextInput(label='–ü—Ä–∏—á–∏–Ω–∞ –±–∞–Ω–∞', placeholder='–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –±–∞–Ω–∞, —É–∫–∞–∑–∞–Ω–Ω—É—é –ø—Ä–∏ –±–∞–Ω–µ')
    unban_reason = ui.TextInput(label='–ü–æ—á–µ–º—É –º—ã –¥–æ–ª–∂–Ω—ã —Å–Ω—è—Ç—å –±–∞–Ω?', placeholder='–ü–∏—à–∏—Ç–µ –≤ —ç—Ç–æ–º –ø—É–Ω–∫—Ç–µ –≤—Å—ë, —á—Ç–æ –ø–æ—Å—á–∏—Ç–∞–µ—Ç–µ –Ω—É–∂–Ω—ã–º. –ë–æ–ª—å—à–µ —Å–ª–æ–≤ –ø–æ –¥–µ–ª—É - –±–æ–ª—å—à–µ —à–∞–Ω—Å –Ω–∞ —Ä–∞–∑–±–∞–Ω', style=discord.TextStyle.paragraph)

    def __init__(self, bot: commands.Bot):
        super().__init__(timeout=None)
        self.bot = bot

    async def on_submit(self, interaction: discord.Interaction):
        ban_date = self.ban_date.value
        ban_reason = self.ban_reason.value
        unban_reason = self.unban_reason.value

        with open("unban_votes.json", "r", encoding="utf-8") as f:
            data = json.load(f)

        if str(interaction.user.id) in str(data):
            await interaction.response.send_message(f'–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –¥–µ–π—Å—Ç–≤—É—é—â–∏–π —Ç–∏–∫–µ—Ç –Ω–∞ —Ä–∞–∑–±–∞–Ω', ephemeral=True)
            return

        await interaction.response.send_message(f'–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–≤–µ—Ç!', ephemeral=True)
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—É—é –≤–µ—Ç–∫—É –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å id 1111696778862014524
        category = self.bot.get_channel(1111696778862014524)
        if category is not None:
            thread = await category.create_thread(name=f"–¢–∏–∫–µ—Ç {interaction.user.display_name}", type=discord.ChannelType.private_thread)
            # –ü–æ–ø—ã—Ç–∞—Ç—å—Å—è –ø–æ–ª—É—á–∏—Ç—å –æ–±—ä–µ–∫—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞ –ø–æ –µ–≥–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É
            user = await self.bot.fetch_user(360162170174177280)
            # –î–æ–±–∞–≤–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≤ –ø–æ—Ç–æ–∫
            await thread.add_user(user)

            # –ü–∏–Ω–≥—É–µ–º –≤—Å–µ—Ö –≤ –≤–µ—Ç–∫–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–ø—Ä–æ—Å–∞
            embed = discord.Embed(title=f'–û–ø—Ä–æ—Å –æ —Ä–∞–∑–±–∞–Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {interaction.user}', colour=discord.Colour.green())
            embed.set_author(name=interaction.user.display_name, icon_url=interaction.user.avatar.url)
            embed.add_field(name='–î–∞—Ç–∞ –±–∞–Ω–∞:', value=ban_date)
            embed.add_field(name='–ü—Ä–∏—á–∏–Ω–∞ –±–∞–Ω–∞:', value=ban_reason)
            embed.add_field(name='–ü—Ä–∏—á–∏–Ω–∞ —Ä–∞–∑–±–∞–Ω–∞:', value=unban_reason)
            await thread.send(f'<@&1125082611631534090>', embed=embed)

            vote_view = VoteView(self.bot)
            vote_view.user_id = interaction.user.id
            vote_view.ban_date = ban_date
            vote_view.ban_reason = ban_reason
            vote_view.unban_reason = unban_reason
            vote_view.thread_id = thread.id

            descript = f"–†–∞–∑–±–∞–Ω–∏–≤–∞—Ç—å –ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞ {vote_view.user_id}?"
            embed = discord.Embed(title="–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ", description=descript, color=discord.Colour.green())
            embed.set_footer(text="–ó–∞—è–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±—É–¥–µ—Ç –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –Ω–∞ –º–µ—Å—è—Ü, –≤ —Å–ª—É—á–∞–µ –æ—Ç–∫–∞–∑–∞")

            VM = VoteManager(self.bot)
            VM.save_vote(vote_view)
            vote_view.message = await thread.send(embed=embed, view=vote_view)
            view = CloseTicketView(self.bot)
            embed = discord.Embed(title="–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∏ –∑–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç.", colour=discord.Colour.red())
            await thread.send(embed=embed, view=view)


# –°–æ–∑–¥–∞–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏–Ω—è—Ç–∏—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
class AcceptButton(ui.Button):
    def __init__(self, bot):
        super().__init__(label="‚úÖ", style=discord.ButtonStyle.green, custom_id="unban_YES")
        self.bot = bot

    async def callback(self, interaction: discord.Interaction):
        VM = VoteManager(self.bot)
        view = VM.load_vote(interaction.channel.id)
        if interaction.user.id in view.votes["‚ùå"]:
            view.votes["‚ùå"].remove(interaction.user.id)
        if interaction.user.id not in view.votes["‚úÖ"]:
            view.votes["‚úÖ"].add(interaction.user.id) # –ò—Å–ø–æ–ª—å–∑—É–µ–º add –≤–º–µ—Å—Ç–æ append
            await interaction.response.send_message(f"–í—ã –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏ –∑–∞ —Ä–∞–∑–±–∞–Ω.", ephemeral=True)
        else:
            view.votes["‚úÖ"].remove(interaction.user.id)
            await interaction.response.send_message(f"–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –≥–æ–ª–æ—Å –∑–∞ —Ä–∞–∑–±–∞–Ω.", ephemeral=True)

        view.thread_id = interaction.channel.id
        view.message_id = interaction.message.id
        VM.save_vote(view)
        await view.update_embed(interaction)


# –°–æ–∑–¥–∞–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∫–Ω–æ–ø–∫–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
class RejectButton(ui.Button):
    def __init__(self, bot):
        super().__init__(label="‚ùå", style=discord.ButtonStyle.red, custom_id="unban_NO")
        self.bot = bot

    async def callback(self, interaction: discord.Interaction):
        VM = VoteManager(self.bot)
        view = VM.load_vote(interaction.channel.id)
        if interaction.user.id in view.votes["‚úÖ"]:
            view.votes["‚úÖ"].remove(interaction.user.id)
        if interaction.user.id not in view.votes["‚ùå"]:
            view.votes["‚ùå"].add(interaction.user.id)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º add –≤–º–µ—Å—Ç–æ append
            await interaction.response.send_message(f"–í—ã –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏ –ø—Ä–æ—Ç–∏–≤ —Ä–∞–∑–±–∞–Ω–∞.", ephemeral=True)
        else:
            view.votes["‚ùå"].remove(interaction.user.id)
            await interaction.response.send_message(f"–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –≥–æ–ª–æ—Å –ø—Ä–æ—Ç–∏–≤ —Ä–∞–∑–±–∞–Ω–∞.", ephemeral=True)
        view.thread_id = interaction.channel.id
        view.message_id = interaction.message.id
        VM.save_vote(view)
        await view.update_embed(interaction)

# –°–æ–∑–¥–∞–µ–º –∫–ª–∞—Å—Å –¥–ª—è –≤–∏–¥–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
class VoteView(ui.View):
    def __init__(self, bot: commands.Bot):
        super().__init__(timeout=None)
        self.bot = bot
        self.message = None
        self.options = ['‚úÖ', '‚ùå']
        self.user_id = None
        self.ban_date = None
        self.ban_reason = None
        self.unban_reason = None
        self.votes = {option: set() for option in self.options}
        self.active = True
        self.thread_id = None
        self.message_id = None
        self.close_time = None

        self.add_item(AcceptButton(self.bot))
        self.add_item(RejectButton(self.bot))

    async def update_embed(self, interaction: discord.Interaction):
        thread = interaction.channel
        members = await thread.fetch_members()
        # –§–∏–ª—å—Ç—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ —Ä–æ–ª–∏ —Å id 1125082611631534090
        yes_count = len(self.votes["‚úÖ"])
        no_count = len(self.votes["‚ùå"])
        total_role = len(self.votes)
        total_count = yes_count + no_count
        yes_percent = 0
        no_percent = 0
        try:
            yes_percent = round(yes_count / total_count * 100, 1)
        except:
            None
        try:
            no_percent = round(no_count / total_count * 100, 1)
        except:
            None

        descript = f"–†–∞–∑–±–∞–Ω–∏–≤–∞—Ç—å –ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞ {self.user_id}?"
        embed = discord.Embed(title="–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ", description=descript, color=discord.Colour.green())
        embed.set_footer(text="–ó–∞—è–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±—É–¥–µ—Ç –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –Ω–∞ –º–µ—Å—è—Ü, –≤ —Å–ª—É—á–∞–µ –æ—Ç–∫–∞–∑–∞")
        embed.add_field(name="–†–µ–∑—É–ª—å—Ç–∞—Ç—ã:", value=f"‚úÖ - {yes_count} –≥–æ–ª–æ—Å–æ–≤ ({yes_percent}%)\n‚ùå - {no_count} –≥–æ–ª–æ—Å–æ–≤ ({no_percent}%)")
        await interaction.message.edit(embed=embed)
        if total_count == total_role:
            self.stop()


# –°–æ–∑–¥–∞–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è —Ç–∏–∫–µ—Ç–∞
class CloseTicketButton(ui.Button):
    def __init__(self, bot: commands.Bot):
        super().__init__(label="–ó–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç", style=discord.ButtonStyle.danger, custom_id="close_ticket_button")
        self.bot = bot

    async def callback(self, interaction: discord.Interaction):
        VM = VoteManager(self.bot)
        vote_view = VM.load_vote(interaction.channel.id)
        thread = interaction.channel
        members = await thread.fetch_members()
        # –£–¥–∞–ª—è–µ–º –∏–∑ –≤–µ—Ç–∫–∏ –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –∏–º–µ—é—Ç —Ä–æ–ª—å —Å id 1125082611631534090
        '''
        for member in members:
            guild_member = thread.guild.get_member(member.id)
            if not guild_member._roles.has(1125082611631534090):
                await thread.remove_user(member)
        '''

        guild_ids = [
            691788414101618819,  # –°–∞–π –∏ –µ–≥–æ –§—ã—Ä
            856978727972110356,  # –ú–∞–π–Ω–∫—Ä–∞—Ñ—Ç —Å–µ—Ä–≤–µ—Ä
            865194554252591104,  # –•–∞–± –æ–±—â–∏–π
            975557824287506443,  # –•–æ—Ä–Ω–∏ —Å–µ—Ä–≤–µ—Ä
            880581161133416480,  # –ê—Ä—Ç –º–∞—Å—Ç–µ—Ä
            795643820800213012,  # –†–ü —Å–µ—Ä–≤–µ—Ä
            932050265975193611,  # –°–µ—Ä–≤–µ—Ä –∑–∞–±–∞–Ω–µ–Ω—ã—Ö
            1114227136199405591, # –°–µ—Ä–≤–µ—Ä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞ CheeseHelper
            1142152375440785410  # –°–µ—Ä–≤–µ—Ä –ë–ê–ù–û–í
        ]
        yes_count = len(vote_view.votes["‚úÖ"])
        no_count = len(vote_view.votes["‚ùå"])
        total_role = len(vote_view.votes)
        total_count = yes_count + no_count
        yes_percent = 0
        no_percent = 0
        try:
            yes_percent = round(yes_count / total_count * 100, 1)
        except:
            None
        try:
            no_percent = round(no_count / total_count * 100, 1)
        except:
            None


        # await thread.send(f'–¢–∏–∫–µ—Ç –±—ã–ª –∑–∞–∫—Ä—ã—Ç.')
        vote_view.clear_items()

        # message = await interaction.channel.fetch_message(vote_view.message_id)
        #
        # await message.edit(view=vote_view)
        await interaction.message.edit(view=vote_view)
        await thread.edit(name=f"(–∑–∞–∫—Ä—ã—Ç–æ) {thread.name}")

        if yes_percent > 50:
            await self.UnbanBaban(interaction, guild_ids, vote_view.user_id)
        else:
            await thread.send(f'–†–∞–∑–±–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±—ã–ª –æ—Ç–∫–ª–æ–Ω—ë–Ω')
            await interaction.response.send_message(f'–¢–∏–∫–µ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç.', ephemeral=True)

    async def UnbanBaban(self,interaction, server_ids, user_id):
        user = await self.bot.fetch_user(user_id)
        # –ø–µ—Ä–µ–±—Ä–∞—Ç—å —Å–µ—Ä–≤–µ—Ä—ã –∏–∑ —Å–ø–∏—Å–∫–∞ –ø–æ id
        for server_id in server_ids:
            # –ø–æ–ª—É—á–∏—Ç—å –æ–±—ä–µ–∫—Ç —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ id
            server = self.bot.get_guild(server_id)
            # –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–∫–æ–π —Å–µ—Ä–≤–µ—Ä
            if server is None:
                continue  # –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–µ—Ä–≤–µ—Ä—É
            # –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è —Ä–∞–∑–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
            try:
                await server.unban(user)  # —Ä–∞–∑–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
                await interaction.channel.send(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.name}(id: {user.id}) —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ {server.name}')  # –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —Ä–∞–∑–±–∞–Ω–µ
                break  # –ø—Ä–µ—Ä–≤–∞—Ç—å —Ü–∏–∫–ª
            except discord.NotFound:
                continue  # –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–µ—Ä–≤–µ—Ä—É
            except discord.Forbidden:
                await interaction.channel.send(f"–£ –±–æ—Ç–∞ –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —Ä–∞–∑–±–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.mention} –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ {server.name}")  # –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
                break  # –ø—Ä–µ—Ä–≤–∞—Ç—å —Ü–∏–∫–ª



# –°–æ–∑–¥–∞–µ–º –∫–ª–∞—Å—Å –¥–ª—è –≤–∏–¥–∞ —Å –∫–Ω–æ–ø–∫–æ–π –∑–∞–∫—Ä—ã—Ç–∏—è —Ç–∏–∫–µ—Ç–∞
class CloseTicketView(ui.View):
    def __init__(self, bot: commands.Bot):
        super().__init__(timeout=None)
        self.add_item(CloseTicketButton(bot))

# –°–æ–∑–¥–∞–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∫–Ω–æ–ø–∫–∏ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ç–∏–∫–µ—Ç–∞
class OpenTicketButton(ui.Button):
    def __init__(self, bot: commands.Bot):
        super().__init__(label="–û—Ç–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç", style=discord.ButtonStyle.primary, custom_id="open_ticket_button")
        self.bot = bot

    async def callback(self, interaction: discord.Interaction):
        view = UnbanModal(self.bot)
        await interaction.response.send_modal(view)

# –°–æ–∑–¥–∞–µ–º –∫–ª–∞—Å—Å –¥–ª—è –≤–∏–¥–∞ —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–∫—Ä—ã—Ç–∏—è —Ç–∏–∫–µ—Ç–∞
class OpenTicketView(ui.View):
    def __init__(self, bot: commands.Bot):
        super().__init__(timeout=None)
        self.add_item(OpenTicketButton(bot))

class Unban(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot
        self.vote_view = VoteView(self.bot)

    @commands.Cog.listener()
    async def on_ready(self):
        print("Unban cog ready")

    @app_commands.command(name='—Ä–∞–∑–±–∞–Ω', description='–ü–æ–∫–∞–∑–∞—Ç—å –µ–º–±–µ–¥ —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Ç–∏–∫–µ—Ç–∞ –Ω–∞ –∞–ø–ø–µ–ª—è—Ü–∏—é')
    async def unban(self, interaction: discord.Interaction):
        check_1 = str(interaction.user.id) in self.bot.ctx.admins
        check_2 = self.bot.check_roles(interaction.user, "1,20")
        if not (check_1 or check_2):
            await interaction.response.send_message(f'–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã', ephemeral=True)
            return
        view = OpenTicketView(self.bot)

        embed = discord.Embed(title="–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç –Ω–∞ –∞–ø–ø–µ–ª—è—Ü–∏—é", colour=discord.Colour.from_rgb(0, 214, 255))
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–º–±–µ–¥ –∏ –≤–∏–¥ –≤ –∫–∞–Ω–∞–ª —Å id 1111696778862014524
        channel = self.bot.get_channel(1111696778862014524)
        if channel is not None:
            await channel.send(embed=embed, view=view)

    @commands.Cog.listener()
    async def on_interaction(self, interaction: discord.Interaction):
        if interaction.type == discord.InteractionType.component:
            component_interaction = interaction.data
            if component_interaction['custom_id'] == "open_ticket_button":
                await OpenTicketButton.callback(self, interaction)
            if component_interaction['custom_id'] == "close_ticket_button":
                await CloseTicketButton.callback(self, interaction)
                print("–º—è—É")
            if component_interaction['custom_id'] == "unban_YES":

                VM = VoteManager(self.bot)
                vote_view = VM.load_vote(interaction.channel.id)
                if vote_view != None:
                    await AcceptButton.callback(self.vote_view.children[0], interaction)

            if component_interaction['custom_id'] == "unban_NO":
                VM = VoteManager(self.bot)
                vote_view = VM.load_vote(interaction.channel.id)
                if vote_view != None:
                    await RejectButton.callback(self.vote_view.children[1], interaction)

            '''
            {"user_id": null, "ban_date": null, "ban_reason": null, "unban_reason": null,
             "votes": {"‚úÖ": [360162170174177280], "‚ùå": []}, "active": true, "thread_id": null, "close_time": null}
            '''

async def setup(bot: commands.Bot):
    await bot.add_cog(Unban(bot), guilds=bot.guilds)